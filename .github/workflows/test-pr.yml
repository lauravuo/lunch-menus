name: Test Pull Request

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      
    - name: Set up Python
      uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Lint with flake8
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Check all linting rules and fail on violations
        flake8 src/ --count --max-complexity=10 --max-line-length=88 --extend-ignore=E203,W503 --statistics
        
    - name: Test with pytest
      run: |
        pip install pytest
        pytest test_scrapers.py -v
        
    - name: Test current day menu functionality
      run: |
        python test_current_day.py
        
    - name: Test Telegram bot functionality
      run: |
        pytest test_telegram_bot.py -v
        
    - name: Test scraper imports
      run: |
        python -c "
        import sys
        sys.path.insert(0, 'src')
        
        from restaurants.base import BaseRestaurant
        from restaurants.kahvila_epila import KahvilaEpila
        from restaurants.kontukeittio import KontukeittioNokia
        from restaurants.nokian_kartano import NokianKartano
        from telegram_bot import TelegramBot
        from scraper import get_restaurants, scrape_all_menus
        print('✅ All imports successful')
        "
        
    - name: Test scraper without Telegram (dry run)
      env:
        TELEGRAM_BOT_TOKEN: "test_token"
        TELEGRAM_CHANNEL_ID: "test_channel"
      run: |
        # Test that scrapers can be initialized and run without errors
        python -c "
        import sys
        sys.path.insert(0, 'src')
        
        from restaurants.kahvila_epila import KahvilaEpila
        from restaurants.kontukeittio import KontukeittioNokia
        from restaurants.nokian_kartano import NokianKartano
        
        # Test initialization
        epila = KahvilaEpila()
        kontu = KontukeittioNokia()
        kartano = NokianKartano()
        
        print(f'✅ Initialized: {epila.name}, {kontu.name}, {kartano.name}')
        
        # Test that we can get page content (this will fail for real sites without proper tokens)
        # but we can at least test the structure
        print('✅ All scrapers initialized successfully')
        "
        
    - name: Check code formatting
      run: |
        pip install black
        # Check if code is properly formatted - fail if not formatted correctly
        black --check src/
        
    - name: Validate workflow files with actionlint
      run: |
        # Install actionlint using the official download script
        bash <(curl -s https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
        
        # Validate all workflow files
        ./actionlint -color
        
        echo "✅ All workflow files are valid"
